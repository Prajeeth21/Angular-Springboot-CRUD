{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/authentication.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(authenticationService) {\n      this.authenticationService = authenticationService;\n    }\n\n    intercept(httpRequest, httpHandler) {\n      if (httpRequest.url.includes(`${this.authenticationService.host}/user/login`)) {\n        return httpHandler.handle(httpRequest);\n      }\n\n      if (httpRequest.url.includes(`${this.authenticationService.host}/user/register`)) {\n        return httpHandler.handle(httpRequest);\n      }\n\n      this.authenticationService.loadToken();\n      const token = this.authenticationService.getToken();\n      const request = httpRequest.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return httpHandler.handle(request);\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthenticationService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}